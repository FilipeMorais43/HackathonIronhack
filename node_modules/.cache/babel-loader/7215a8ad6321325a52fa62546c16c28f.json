{"ast":null,"code":"var _jsxFileName = \"/Users/joanacruz/Desktop/Hackathon/src/components/OurInput/index.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { Form } from 'react-bootstrap';\n\nclass OurInput extends Component {\n  constructor() {\n    super();\n    this.type = '';\n  }\n\n  handleInputChange(event) {\n    const inputName = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [inputName]: value\n    });\n  }\n\n  handleSubmission(event) {\n    event.preventDefault();\n    const submission = {}; // TO DO --> add to our existing data of companies\n  }\n\n  render() {\n    const {\n      type,\n      name,\n      labelTrue,\n      labelFalse,\n      title,\n      choices\n    } = this.props;\n    return React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, name.includes(\"question\") && React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, title) || React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, name), type === \"text\" && React.createElement(Form.Control, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }) || type === \"dropdown\" && React.createElement(Form.Control, {\n      as: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, choices.map(choice => React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, choice.text))) || type === \"boolean\" && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      inline: true,\n      label: labelTrue,\n      type: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Form.Check, {\n      inline: true,\n      label: labelFalse,\n      type: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default OurInput;","map":{"version":3,"sources":["/Users/joanacruz/Desktop/Hackathon/src/components/OurInput/index.jsx"],"names":["React","Component","Fragment","Form","OurInput","constructor","type","handleInputChange","event","inputName","target","name","value","setState","handleSubmission","preventDefault","submission","render","labelTrue","labelFalse","title","choices","props","includes","map","choice","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC7BI,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,IAAL,GAAY,EAAZ;AACH;;AAEDC,EAAAA,iBAAiB,CAACC,KAAD,EAAO;AACpB,UAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAA/B;AACA,UAAMC,KAAK,GAAGJ,KAAK,CAACE,MAAN,CAAaE,KAA3B;AACA,SAAKC,QAAL,CAAc;AACV,OAACJ,SAAD,GAAaG;AADH,KAAd;AAGH;;AAEDE,EAAAA,gBAAgB,CAACN,KAAD,EAAO;AACnBA,IAAAA,KAAK,CAACO,cAAN;AAEA,UAAMC,UAAU,GAAG,EAAnB,CAHmB,CAOnB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAK;AAAEX,MAAAA,IAAF;AAAQK,MAAAA,IAAR;AAAcO,MAAAA,SAAd;AAAyBC,MAAAA,UAAzB;AAAqCC,MAAAA,KAArC;AAA4CC,MAAAA;AAA5C,QAAwD,KAAKC,KAAlE;AAEA,WACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKX,IAAI,CAACY,QAAL,CAAc,UAAd,KAA6B,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcH,KAAd,CAA9B,IACG,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcT,IAAd,CAHP,EAOKL,IAAI,KAAK,MAAT,IACD,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,IAICA,IAAI,KAAK,UAAT,IAAuB,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,EAAE,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEhBe,OAAO,CAACG,GAAR,CAAYC,MAAM,IACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASA,MAAM,CAACC,IAAhB,CADJ,CAFgB,CAJxB,IAYCpB,IAAI,KAAK,SAAT,IACD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,KAAK,EAAEY,SAA1B;AAAqC,MAAA,IAAI,EAAC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,KAAK,EAAEC,UAA1B;AAAsC,MAAA,IAAI,EAAC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CApBJ,CADJ;AA6BH;;AAxD4B;;AA2DjC,eAAef,QAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { Form } from 'react-bootstrap';\n\nclass OurInput extends Component {\n    constructor(){\n        super();\n        this.type = '';\n    }\n\n    handleInputChange(event){\n        const inputName = event.target.name\n        const value = event.target.value\n        this.setState({\n            [inputName]: value\n        })\n    }\n    \n    handleSubmission(event){\n        event.preventDefault();\n\n        const submission = {\n            \n        }\n\n        // TO DO --> add to our existing data of companies\n    }\n\n    render() {\n        const{ type, name, labelTrue, labelFalse, title, choices } = this.props;\n\n        return (\n            <Form.Group>\n            {\n                (name.includes(\"question\") && <Form.Label>{ title }</Form.Label>)\n                || <Form.Label>{ name }</Form.Label>\n\n            }\n            {\n                (type === \"text\" && \n                <Form.Control></Form.Control>\n                )\n                ||\n                (type === \"dropdown\" && <Form.Control as=\"select\">\n                    {\n                        choices.map(choice => (\n                            <option>{choice.text}</option>\n                        ))\n                    }\n                </Form.Control>)\n                ||\n                (type === \"boolean\" && \n                <Fragment>\n                    <Form.Check inline label={labelTrue} type=\"checkbox\"/>\n                    <Form.Check inline label={labelFalse} type=\"checkbox\"/>\n                </Fragment>\n                )\n            }\n            </Form.Group>\n        )\n    }\n}\n\nexport default OurInput;\n"]},"metadata":{},"sourceType":"module"}